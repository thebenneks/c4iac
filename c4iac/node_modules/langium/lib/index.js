"use strict";
/******************************************************************************
 * Copyright 2021 TypeFox GmbH
 * This program and the accompanying materials are made available under the
 * terms of the MIT License, which is available in the project root.
 ******************************************************************************/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GrammarAST = void 0;
__exportStar(require("./default-module"), exports);
__exportStar(require("./dependency-injection"), exports);
__exportStar(require("./generator/generator-node"), exports);
__exportStar(require("./generator/node-processor"), exports);
__exportStar(require("./generator/template-string"), exports);
__exportStar(require("./grammar/ast-reflection-interpreter"), exports);
__exportStar(require("./grammar/langium-grammar-module"), exports);
__exportStar(require("./grammar/language-meta-data"), exports);
__exportStar(require("./lsp"), exports);
__exportStar(require("./parser/langium-parser"), exports);
__exportStar(require("./parser/langium-parser-builder"), exports);
__exportStar(require("./parser/parser-config"), exports);
__exportStar(require("./parser/token-builder"), exports);
__exportStar(require("./parser/value-converter"), exports);
__exportStar(require("./references/linker"), exports);
__exportStar(require("./references/name-provider"), exports);
__exportStar(require("./references/scope-computation"), exports);
__exportStar(require("./references/scope-provider"), exports);
__exportStar(require("./serializer/json-serializer"), exports);
__exportStar(require("./service-registry"), exports);
__exportStar(require("./services"), exports);
__exportStar(require("./syntax-tree"), exports);
__exportStar(require("./utils/ast-util"), exports);
__exportStar(require("./utils/collections"), exports);
__exportStar(require("./utils/cst-util"), exports);
__exportStar(require("./utils/grammar-util"), exports);
__exportStar(require("./utils/promise-util"), exports);
__exportStar(require("./utils/uri-util"), exports);
__exportStar(require("./utils/regex-util"), exports);
__exportStar(require("./utils/stream"), exports);
__exportStar(require("./validation/document-validator"), exports);
__exportStar(require("./validation/validation-registry"), exports);
__exportStar(require("./workspace/ast-descriptions"), exports);
__exportStar(require("./workspace/document-builder"), exports);
__exportStar(require("./workspace/documents"), exports);
__exportStar(require("./workspace/index-manager"), exports);
__exportStar(require("./workspace/file-system-provider"), exports);
__exportStar(require("./workspace/workspace-manager"), exports);
__exportStar(require("./workspace/configuration"), exports);
// Export the Langium Grammar AST definitions in the `GrammarAST` namespace
const GrammarAST = __importStar(require("./grammar/generated/ast"));
exports.GrammarAST = GrammarAST;
//# sourceMappingURL=index.js.map