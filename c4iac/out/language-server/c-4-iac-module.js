"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createC4IacServices = exports.C4IacModule = void 0;
const langium_1 = require("langium");
const module_1 = require("./generated/module");
const c_4_iac_validator_1 = require("./c-4-iac-validator");
/**
 * Dependency injection module that overrides Langium default services and contributes the
 * declared custom services. The Langium defaults can be partially specified to override only
 * selected services, while the custom services must be fully specified.
 */
exports.C4IacModule = {
    validation: {
        ValidationRegistry: (services) => new c_4_iac_validator_1.C4IacValidationRegistry(services),
        C4IacValidator: () => new c_4_iac_validator_1.C4IacValidator()
    }
};
/**
 * Create the full set of services required by Langium.
 *
 * First inject the shared services by merging two modules:
 *  - Langium default shared services
 *  - Services generated by langium-cli
 *
 * Then inject the language-specific services by merging three modules:
 *  - Langium default language-specific services
 *  - Services generated by langium-cli
 *  - Services specified in this file
 *
 * @param context Optional module context with the LSP connection
 * @returns An object wrapping the shared services and the language-specific services
 */
function createC4IacServices(context) {
    const shared = (0, langium_1.inject)((0, langium_1.createDefaultSharedModule)(context), module_1.C4IacGeneratedSharedModule);
    const C4Iac = (0, langium_1.inject)((0, langium_1.createDefaultModule)({ shared }), module_1.C4IacGeneratedModule, exports.C4IacModule);
    shared.ServiceRegistry.register(C4Iac);
    return { shared, C4Iac };
}
exports.createC4IacServices = createC4IacServices;
//# sourceMappingURL=c-4-iac-module.js.map